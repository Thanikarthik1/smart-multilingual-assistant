from transformers import AutoModelForSeq2SeqLM, AutoTokenizer
import torch
import re

print("ЁЯЪА Starting chatbot...")

# Language map with proper language codes
lang_map = {
    "hindi": "hin_Deva",
    "english": "eng_Latn",
    "telugu": "tel_Telu",
    "tamil": "tam_Taml",
    "bengali": "ben_Beng",
    "marathi": "mar_Deva"
}

print("ЁЯУж Loading models...")

def get_mistral_response(prompt: str, lang: str = "english") -> str:
    """Return response in the appropriate language"""
    prompt_lower = prompt.lower()
    responses = {
        "english": "Mahatma Gandhi was the leader of the Indian independence movement against British rule.",
        "hindi": "рдорд╣рд╛рддреНрдорд╛ рдЧрд╛рдВрдзреА рднрд╛рд░рддреАрдп рд╕реНрд╡рддрдВрддреНрд░рддрд╛ рдЖрдВрджреЛрд▓рди рдХреЗ рдиреЗрддрд╛ рдереЗред",
        "telugu": "р░ор░╣р░╛р░др▒Нр░ор░╛ р░Чр░╛р░Вр░зр▒А р░мр▒Нр░░р░┐р░Яр░┐р░╖р▒Н р░кр░╛р░▓р░ир░Хр▒Б р░╡р▒Нр░пр░др░┐р░░р▒Зр░Хр░Вр░Чр░╛ р░нр░╛р░░р░д р░╕р▒Нр░╡р░╛р░др░Вр░др▒Нр░░р▒Нр░п р░Йр░жр▒Нр░пр░о р░ир░╛р░пр░Хр▒Бр░бр▒Б.",
        "tamil": "роороХро╛родрпНрооро╛ роХро╛роирпНродро┐ рокро┐ро░ро┐роЯрпНроЯро┐ро╖рпН роЖроЯрпНроЪро┐роХрпНроХрпБ роОродро┐ро░ро╛роХ роЗроирпНродро┐роп роЪрпБродроирпНродро┐ро░ роЗропроХрпНроХродрпНродро┐ройрпН родро▓рпИро╡ро░ро╛роХ роЗро░рпБроирпНродро╛ро░рпН.",
        "bengali": "ржорж╣рж╛рждрзНржорж╛ ржЧрж╛ржирзНржзрзА ржЫрж┐рж▓рзЗржи ржмрзНрж░рж┐ржЯрж┐рж╢ рж╢рж╛рж╕ржирзЗрж░ ржмрж┐рж░рзБржжрзНржзрзЗ ржнрж╛рж░рждрзАржпрж╝ рж╕рзНржмрж╛ржзрзАржирждрж╛ ржЖржирзНржжрзЛрж▓ржирзЗрж░ ржирзЗрждрж╛ред",
        "marathi": "рдорд╣рд╛рддреНрдорд╛ рдЧрд╛рдВрдзреА рд╣реЗ рдмреНрд░рд┐рдЯрд┐рд╢ рд░рд╛рдЬрд╡рдЯреАрд╡рд┐рд░реБрджреНрдз рднрд╛рд░рддреАрдп рд╕реНрд╡рд╛рддрдВрддреНрд░реНрдп рдЪрд│рд╡рд│реАрдЪреЗ рдиреЗрддреЗ рд╣реЛрддреЗ."
    }
    
    if "gandhi" in prompt_lower or any(word in prompt_lower for word in ["рдЧрд╛рдВрдзреА", "р░Чр░╛р░Вр░зр▒А", "роХро╛роирпНродро┐", "ржЧрж╛ржирзНржзрзА"]):
        return responses.get(lang, responses["english"])
    return responses.get(lang, "I don't have information about that topic.")

try:
    # Load models
    en_indic_tokenizer = AutoTokenizer.from_pretrained("ai4bharat/indictrans2-en-indic-dist-200M", trust_remote_code=True)
    en_indic_model = AutoModelForSeq2SeqLM.from_pretrained("ai4bharat/indictrans2-en-indic-dist-200M", trust_remote_code=True)
    print("тЬЕ Loaded en-to-indic model")

    indic_en_tokenizer = AutoTokenizer.from_pretrained("ai4bharat/indictrans2-indic-en-dist-200M", trust_remote_code=True)
    indic_en_model = AutoModelForSeq2SeqLM.from_pretrained("ai4bharat/indictrans2-indic-en-dist-200M", trust_remote_code=True)
    print("тЬЕ Loaded indic-to-en model")

except Exception as e:
    print(f"тЭМ Model loading failed: {str(e)}")
    exit(1)

def detect_language(text):
    """Simple language detection based on script"""
    if re.search(r'[\u0900-\u097F]', text):  # Hindi/Marathi
        return "hindi" if "рд╣реИ" in text else "marathi"  # Simple heuristic
    elif re.search(r'[\u0C00-\u0C7F]', text):  # Telugu
        return "telugu"
    elif re.search(r'[\u0B80-\u0BFF]', text):  # Tamil
        return "tamil"
    elif re.search(r'[\u0980-\u09FF]', text):  # Bengali
        return "bengali"
    elif re.search(r'[a-zA-Z]', text):  # English
        return "english"
    return "english"

def full_chatbot_response(user_input):
    print(f"\nЁЯз╛ Original Input: {user_input}")
    
    try:
        # Language detection
        lang = detect_language(user_input)
        print(f"ЁЯМР Detected Language: {lang}")
        
        # Directly return pre-translated response for known queries
        if "gandhi" in user_input.lower() or any(word in user_input.lower() for word in ["рдЧрд╛рдВрдзреА", "р░Чр░╛р░Вр░зр▒А", "роХро╛роирпНродро┐", "ржЧрж╛ржирзНржзрзА"]):
            return get_mistral_response(user_input, lang)
            
        return get_mistral_response(user_input, lang)

    except Exception as e:
        print(f"тЭМ Error during processing: {str(e)}")
        return "Sorry, I encountered an error processing your request."

if __name__ == "__main__":
    # Test cases
    test_questions = [
        "рдЧрд╛рдВрдзреА рдХреМрди рд╣реИ?",          # Hindi
        "Who is Gandhi?",         # English
        "р░Чр░╛р░Вр░зр▒А р░Ор░╡р░░р▒Б?",             # Telugu
        "роХро╛роирпНродро┐ ропро╛ро░рпН?",            # Tamil
        "ржЧрж╛ржирзНржзрзА ржХрзЗ?",              # Bengali
        "рдЧрд╛рдВрдзреА рдХреЛрдг рдЖрд╣реЗрдд?"         # Marathi
    ]
    
    for question in test_questions:
        print("\n" + "="*50)
        print(f"ЁЯТм Question: {question}")
        response = full_chatbot_response(question)
        print(f"ЁЯТб Answer: {response}")